"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
      if (__hasOwnProp.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b)) {
        if (__propIsEnum.call(b, prop))
          __defNormalProp(a, prop, b[prop]);
      }
    return a;
  };
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // src/index.ts
  var import_path = __toESM(__require("path"));
  var import_fs = __toESM(__require("fs"));
  var mediapipe = (config) => {
    return {
      name: "mediapipe",
      load(id) {
        const MEDIAPIPE_EXPORT_NAMES = __spreadValues({
          "camera_utils.js": [
            "Camera"
          ],
          "drawing_utils.js": [
            "clamp",
            "drawLandmarks",
            "drawConnectors",
            "drawRectangle",
            "lerp"
          ],
          "holistic.js": [
            "Holistic",
            "FACE_GEOMETRY",
            "FACEMESH_LIPS",
            "FACEMESH_LEFT_EYE",
            "FACEMESH_LEFT_EYEBROW",
            "FACEMESH_LEFT_IRIS",
            "FACEMESH_RIGHT_EYE",
            "FACEMESH_RIGHT_EYEBROW",
            "FACEMESH_RIGHT_IRIS",
            "FACEMESH_FACE_OVAL",
            "FACEMESH_CONTOURS",
            "FACEMESH_TESSELATION",
            "HAND_CONNECTIONS",
            "POSE_CONNECTIONS",
            "POSE_LANDMARKS",
            "POSE_LANDMARKS_LEFT",
            "POSE_LANDMARKS_RIGHT",
            "POSE_LANDMARKS_NEUTRAL",
            "matrixDataToMatrix",
            "VERSION"
          ],
          "face_detection.js": [
            "VERSION",
            "FaceDetection"
          ]
        }, config);
        const fileName = import_path.default.basename(id);
        if (!(fileName in MEDIAPIPE_EXPORT_NAMES))
          return null;
        let code = import_fs.default.readFileSync(id, "utf-8");
        for (const name of MEDIAPIPE_EXPORT_NAMES[fileName]) {
          code += `exports.${name} = ${name};`;
        }
        return { code };
      }
    };
  };
})();
