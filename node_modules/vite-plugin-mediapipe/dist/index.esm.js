var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};

// src/index.ts
import path from "path";
import fs from "fs";
var mediapipe = (config) => {
  return {
    name: "mediapipe",
    load(id) {
      const MEDIAPIPE_EXPORT_NAMES = __spreadValues({
        "camera_utils.js": [
          "Camera"
        ],
        "drawing_utils.js": [
          "clamp",
          "drawLandmarks",
          "drawConnectors",
          "drawRectangle",
          "lerp"
        ],
        "holistic.js": [
          "Holistic",
          "FACE_GEOMETRY",
          "FACEMESH_LIPS",
          "FACEMESH_LEFT_EYE",
          "FACEMESH_LEFT_EYEBROW",
          "FACEMESH_LEFT_IRIS",
          "FACEMESH_RIGHT_EYE",
          "FACEMESH_RIGHT_EYEBROW",
          "FACEMESH_RIGHT_IRIS",
          "FACEMESH_FACE_OVAL",
          "FACEMESH_CONTOURS",
          "FACEMESH_TESSELATION",
          "HAND_CONNECTIONS",
          "POSE_CONNECTIONS",
          "POSE_LANDMARKS",
          "POSE_LANDMARKS_LEFT",
          "POSE_LANDMARKS_RIGHT",
          "POSE_LANDMARKS_NEUTRAL",
          "matrixDataToMatrix",
          "VERSION"
        ],
        "face_detection.js": [
          "VERSION",
          "FaceDetection"
        ]
      }, config);
      const fileName = path.basename(id);
      if (!(fileName in MEDIAPIPE_EXPORT_NAMES))
        return null;
      let code = fs.readFileSync(id, "utf-8");
      for (const name of MEDIAPIPE_EXPORT_NAMES[fileName]) {
        code += `exports.${name} = ${name};`;
      }
      return { code };
    }
  };
};
export {
  mediapipe
};
